
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.0'
    }
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
}

dependencies {
    compile "com.android.support:support-v4:21.0.2"
    compile "com.android.support:support-v13:21.0.2"
    compile "com.android.support:cardview-v7:21.0.2"
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
    'main',     // main sample code; look here for the interesting stuff.
    'common',   // components that are reused by multiple samples
    'template'] // boilerplate code that is generated by the sample template process

def versionMajor = 1
def versionMinor = 1
def versionPatch = 0

def buildNumber() {
    return "${versionMajor}.${versionMinor}.${versionPatch}";
}

def buildTime() {
    def df = new SimpleDateFormat("yyMMddhhmm")
    return df.format(new Date())
}

def genVersionName() {
    return "${buildNumber()}.${buildTime()}";
}

def genVersionCode() {
    return versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100;
}

android {
    compileSdkVersion 21
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 21
	versionCode ${genVersionCode()}
	versionName "${genVersionName()}"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }

    lintOptions {
        abortOnError false
    }
}

